오후 9:10 2023-01-18
AABB로 충돌 체크
반푼이 OBB로 충돌체크
범준이의 도움으로 완성? 한 GJK
많은 버그가 있었지만 이제는 대충 동작하는거 같은 EPA

GJK 충돌 체크도 잘 되는거 같고 도형들 밀리는 것을 보니 EPA로
충돌 깊이, 방향도 잘 구해지는 듯 함.

이제 충돌 이후 회전하는 것을 해보고 싶은데 쉽지 않다.
원끼리의 충돌 이벤트는 회전이 없어도 그럴듯 해보이지만
다각형에 대한 충돌은 회전을 해야 자연스러울거 같은데....

처음엔 사각형의 변에 원이 충돌했다고 가정했을 때
충격량을 변과 평행, 변과 수직인 축에 분해를 해서
중심으로부터 먼 모서리에서는 충격량이 온전히 회전 운동 에너지로 전달되고,
중심에 딱 맞으면 병진 운동 에너지로 전달되는 그런 비율적인 뭔가...뭔가로 생각해봤고
그런 내용을 몇 주 전에 범준이와 얘기를 나눴었는데

범준이는 역시 초천재 답게 곧바로 코드로 짜와서 눈 앞에서 시연을 해줬다.
범준이는 게살버거 레시피에 매우매우 근접했다고 생각한다.

뭔가 더 개선할 점이 없을까 하고 충돌 관련된 내용을 열심히 찾아봤지만
역시 특별한 소스 배합비율 같은 건 인터넷에 쉽게 올려주지 않는 듯하다.



오후 6:26 2023-01-26
충돌지점을 어떻게 구하나 싶어서 김주환 교수님이 보내주신 물리엔진 프로그래밍 영상과 예제코드, Box2D 예제코드 등을 봤다.
물리 공식은 해결이 됐기 때문에 충돌 지점만 구하면 중력이 없는 환경에서의 충돌을 해낼 수 있을 것 같다.

강체가 콜라이더? Shape?을 가져야 할지 반대가 되어야 할지 고민을 하다가
서로를 가지면 될까? 하고 서로를 포인터로 알 수 있게 해봤고 콜라이더의 위치, 회전, 스케일 정보는 포인터로 강체의 정보를 받아오기로 했지만
문제가 생겼다.. 나는 충돌 감지 도중에 임의로 만들어내는 콜라이더가 있는데
예를 들면 서클 콜라이더와 박스 콜라이더 충돌 감지를 할 때, 박스를 4개의 라인으로 나눠서 라인-서클 충돌 감지를 한다.
근데 이 때 만들어지는 콜라이더는 강체를 가지고 있지 않기 때문에 위치 회전 스케일 정보가 없었던 것..
함수를 대대적으로 수정해야하는 상황이 생겨버렸기 때문에
콜라이더 클래스 내부에 원래 있는 업데이트 함수에서 강체의 위치, 회전, 스케일 정보를 받아서 저장하는 것으로 바꿨다.

충돌 지점은 어떻게 구할까 그건 네이버 지식인에도 나와있지 않다.
충돌 지점은 꼭 2개가 필요할까? 참고한 문서들은 전부 물리엔진을 하려면 2개의 충돌 지점을 가지고 있어야 한다고 했는데...
그럴만한 이유가 있으니까 그런거겠지

SAT로 복수의 충돌 지점을 찾는다는게 무슨 의미일까...
GJK / EPA로는 해결이 되지 않는건가.. 결국은 SAT를 사용할거면 GJK를 왜했는가........




오전 10:51 2023-01-27
원과 원의 충돌 지점은 1개..
원과 폴리곤의 충돌 지점은 1개..
폴리곤과 폴리곤의 충돌 지점은 2개...